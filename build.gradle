repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

buildscript {
    ext.kotlinVersion = "1.3.10"

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'


jacoco {
    toolVersion = "0.8.1"
}

group 'com.tsbonev'
version '0.1'

sourceCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/moduleTestsCoverage.exec")
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}


task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    allprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled = false
        csv.enabled = false
    }
}

codeCoverageReport.dependsOn test